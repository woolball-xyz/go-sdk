openapi: 3.0.4
info:
  title: Woolball AI Network API
  description: "**Transform idle browsers into a powerful distributed AI inference\
    \ network**\r\nFor detailed examples and model lists, visit our [GitHub repository](https://github.com/woolball-xyz/woolball-server)."
  contact:
    name: Woolball Team
    url: https://github.com/woolball-xyz/woolball-server
  license:
    name: AGPL-3.0
    url: https://github.com/woolball-xyz/woolball-server/blob/main/LICENSE
  version: v1
servers:
- url: /
paths:
  /api/v1/speech-recognition:
    post:
      tags:
      - Speech Recognition
      summary: Speech Recognition (Speech-to-Text)
      description: "Convert audio files to text using Whisper models. Supports MP3,\
        \ WAV, M4A and other audio formats."
      operationId: SpeechToText
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SpeechToTextRequestContract"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/STTChunk"
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                x-content-type: application/json
  /api/v1/text-generation:
    post:
      tags:
      - Text Generation
      summary: Text Generation - Multi-Provider
      description: "Generate text using multiple AI providers (Transformers.js, WebLLM,\
        \ MediaPipe). Use the 'provider' field to specify which AI provider to use\
        \ for text generation."
      operationId: TextGeneration
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/TextGenerationRequestContract"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextGenerationResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                x-content-type: application/json
  /api/v1/text-to-speech:
    post:
      tags:
      - Text-to-Speech
      summary: Text-to-Speech
      description: Generate natural speech from text using MMS or Kokoro models. Supports
        multiple languages and premium voices.
      operationId: TextToSpeech
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/TextToSpeechRequestContract"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TTSResponse"
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                x-content-type: application/json
  /api/v1/translation:
    post:
      tags:
      - Translation
      summary: Translation
      description: Translate text between 200+ languages using NLLB models. Uses FLORES200
        format for language codes.
      operationId: Translation
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/TranslationRequestContract"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TranslationResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                x-content-type: application/json
components:
  schemas:
    Chunk:
      type: object
      properties:
        timestamp:
          type: array
          nullable: true
          items:
            type: number
            format: double
        text:
          type: string
          nullable: true
      additionalProperties: false
      example:
        text: text
        timestamp:
        - 0.8008281904610115
        - 0.8008281904610115
    STTChunk:
      type: object
      properties:
        text:
          type: string
          nullable: true
        chunks:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Chunk"
      additionalProperties: false
      example:
        chunks:
        - text: text
          timestamp:
          - 0.8008281904610115
          - 0.8008281904610115
        - text: text
          timestamp:
          - 0.8008281904610115
          - 0.8008281904610115
        text: text
    SpeechToTextRequestContract:
      required:
      - dtype
      - input
      - model
      type: object
      properties:
        model:
          minLength: 1
          type: string
        dtype:
          minLength: 1
          type: string
        input:
          oneOf:
          - type: string
            description: Audio file upload
            format: binary
          - type: string
            description: URL to audio file
            format: uri
          - type: string
            description: Base64 encoded audio data
            format: byte
        return_timestamps:
          type: string
          nullable: true
        stream:
          type: boolean
          nullable: true
        chunk_length_s:
          type: integer
          format: int32
          nullable: true
        stride_length_s:
          type: integer
          format: int32
          nullable: true
        force_full_sequences:
          type: boolean
          nullable: true
        language:
          type: string
          nullable: true
        task:
          type: string
          nullable: true
        num_frames:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      example:
        input: (audio file)
        model: Xenova/whisper-small
        dtype: q8
        language: en
        return_timestamps: "true"
        stream: false
    TTSResponse:
      type: object
      properties:
        audio:
          type: string
          nullable: true
        format:
          type: string
          nullable: true
        sample_rate:
          type: integer
          format: int32
      additionalProperties: false
      example:
        sample_rate: 0
        format: format
        audio: audio
    TextGenerationRequestContract:
      required:
      - input
      - model
      - provider
      type: object
      properties:
        provider:
          type: string
          description: The AI provider to use
          enum:
          - transformers
          - webllm
          - mediapipe
        model:
          type: string
          description: The AI model to use for processing
        input:
          type: string
          description: Input text or messages for generation
        top_k:
          type: integer
          description: The number of highest probability vocabulary tokens to keep
            for top-k-filtering
          nullable: true
        top_p:
          type: number
          description: "If set to float < 1, only the smallest set of most probable\
            \ tokens with probabilities that add up to top_p or higher are kept for\
            \ generation"
          format: double
          nullable: true
        temperature:
          type: number
          description: The value used to modulate the next token probabilities
          format: double
          nullable: true
        repetition_penalty:
          type: number
          description: Parameter for repetition penalty. 1.0 means no penalty
          format: double
          nullable: true
        dtype:
          type: string
          description: "Quantization level (e.g., 'fp16', 'q4', 'q8') - Transformers\
            \ only"
          nullable: true
        max_length:
          type: integer
          description: Maximum length the generated tokens can have - Transformers
            only
          nullable: true
        max_new_tokens:
          type: integer
          description: Maximum number of tokens to generate - Transformers only
          nullable: true
        min_length:
          type: integer
          description: Minimum length of the sequence to be generated - Transformers
            only
          nullable: true
        min_new_tokens:
          type: integer
          description: Minimum numbers of tokens to generate - Transformers only
          nullable: true
        do_sample:
          type: boolean
          description: Whether to use sampling - Transformers only
          nullable: true
        num_beams:
          type: integer
          description: Number of beams for beam search - Transformers only
          nullable: true
        no_repeat_ngram_size:
          type: integer
          description: "If > 0, all ngrams of that size can only occur once - Transformers\
            \ only"
          nullable: true
        context_window_size:
          type: integer
          description: Size of the context window for the model - WebLLM only
          nullable: true
        sliding_window_size:
          type: integer
          description: Size of the sliding window for attention - WebLLM only
          nullable: true
        attention_sink_size:
          type: integer
          description: Size of the attention sink - WebLLM only
          nullable: true
        frequency_penalty:
          type: number
          description: Penalty for token frequency - WebLLM only
          format: double
          nullable: true
        presence_penalty:
          type: number
          description: Penalty for token presence - WebLLM only
          format: double
          nullable: true
        bos_token_id:
          type: integer
          description: Beginning of sequence token ID - WebLLM only
          nullable: true
        max_tokens:
          type: integer
          description: Maximum number of tokens to generate - MediaPipe only
          nullable: true
        random_seed:
          type: integer
          description: Random seed for reproducible results - MediaPipe only
          nullable: true
    TextGenerationResponse:
      type: object
      properties:
        generatedText:
          type: string
          nullable: true
      additionalProperties: false
      example:
        generatedText: generatedText
    TextToSpeechRequestContract:
      required:
      - dtype
      - input
      - model
      type: object
      properties:
        model:
          minLength: 1
          type: string
        dtype:
          minLength: 1
          type: string
        input:
          minLength: 1
          type: string
        voice:
          type: string
          nullable: true
        stream:
          type: boolean
          nullable: true
      additionalProperties: false
      example:
        input: "Hello, this is a test message for text-to-speech conversion."
        model: Xenova/speecht5_tts
        speaker_embeddings: Xenova/speecht5_hifigan
    TranslationRequestContract:
      required:
      - dtype
      - input
      - model
      - srcLang
      - tgtLang
      type: object
      properties:
        model:
          minLength: 1
          type: string
        dtype:
          minLength: 1
          type: string
        input:
          minLength: 1
          type: string
        srcLang:
          minLength: 1
          type: string
        tgtLang:
          minLength: 1
          type: string
      additionalProperties: false
      example:
        input: "Hello, how are you today?"
        model: Xenova/nllb-200-distilled-600M
        src_lang: eng_Latn
        tgt_lang: fra_Latn
    TranslationResponse:
      type: object
      properties:
        translatedText:
          type: string
          nullable: true
      additionalProperties: false
      example:
        translatedText: translatedText
